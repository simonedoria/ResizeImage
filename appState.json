{"EDITOR_STATE":{"allProjectFiles":{"5ebba9d8-ca77-430e-ac67-672970284756":{"id":"5ebba9d8-ca77-430e-ac67-672970284756","parent":null,"name":"ResizeImage","type":"DIRECTORY","isDirectory":true,"children":["8f097062-10ad-4d1f-843a-6fac768c167c"],"isRemovable":false,"filePath":"ResizeImage"},"8f097062-10ad-4d1f-843a-6fac768c167c":{"id":"8f097062-10ad-4d1f-843a-6fac768c167c","parent":"5ebba9d8-ca77-430e-ac67-672970284756","name":"lambda.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"ResizeImage/lambda.js","code":"'use strict'\n\n\nconst AWS = require('aws-sdk')\nconst S3 = new AWS.S3({signatureVersion: 'v4'});\nconst PathPattern = new RegExp(\"(.*/)?(.*)/(.*)\");\n\n// parameters\nconst BUCKET = \"infooggi\";\nconst URL = \"http://infooggi.s3-website.eu-central-1.amazonaws.com\";\n\nexports.handler = function(event, _context, callback) {\n    console.log(\"Entro\");\n    callback(null, event);\n    /*\n    var path = event.queryStringParameters.path;\n    var parts = PathPattern.exec(path);\n    var dir = parts[1] || '';\n    var options = parts[2].split('_');\n    var filename = parts[3];\n\n\n    var sizes = options[0].split(\"x\");\n    var func = options.length > 1 ? options[1] : null;\n\n    var contentType;\n    S3.getObject({Bucket: BUCKET, Key: dir + filename})\n        .promise()\n        .then(data => {\n            contentType = data.ContentType;\n            var img = Sharp(data.Body)\n                .resize(\n                    sizes[0] === 'AUTO' ? null : parseInt(sizes[0]),\n                    sizes[1] === 'AUTO' ? null : parseInt(sizes[1]));\n\n            switch (func){\n                case 'max': img = img.max(); break;\n                case 'min': img = img.min(); break;\n                case null: break;\n                default:\n                    callback(null, {\n                        statusCode: 400,\n                        body: `Unknown func parameter \"${func}\"\\n` +\n                              'For query \".../150x150_func\", \"_func\" must be either empty, \"_min\" or \"_max\"',\n                        headers: {\"Content-Type\": \"text/plain\"}\n                    })\n                    return new Promise(() => {})  // the next then-blocks will never be executed\n            }\n\n            return img.withoutEnlargement().toBuffer();\n        })\n        .then(result =>\n            S3.putObject({\n                Body: result,\n                Bucket: BUCKET,\n                ContentType: contentType,\n                Key: path\n            }).promise()\n        )\n        .then(() =>\n            callback(null, {\n                statusCode: 301,\n                headers: {\"Location\" : `${URL}/${path}`}\n            })\n        )\n        .catch(e => {\n            callback(null, {\n                statusCode: e.statusCode || 400,\n                body: 'Exception: ' + e.message,\n                headers: {\"Content-Type\": \"text/plain\"}\n            })\n        });*/\n}\n","triggers":[{"resourceName":"apigeuCentral1resizeresizeany","config":{}}],"config":{"memory":1536,"timeout":10,"runtime":"nodejs6.10"},"version":6,"syncVersion":98,"references":[],"testCases":{"33cd5ac4-a069-4fd8-90ec-45dd9d8e47b2":{"id":"33cd5ac4-a069-4fd8-90ec-45dd9d8e47b2","name":"image","functionId":"8f097062-10ad-4d1f-843a-6fac768c167c","event":"{\n    \"key\": \"100x100/media/xinature.com-sunsets-sun-sky-sunset-awesome-set-lake-hd-wallpaper-1080p.jpg\"\n}"}},"customSecurityPolicy":{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Resource":"arn:aws:logs:*:*:*","Action":["logs:CreateLogGroup","logs:CreateLogStream","logs:PutLogEvents"]},{"Effect":"Allow","Resource":"arn:aws:s3:::infooggi/*","Action":["s3:PutObject"]}]}}},"rootNode":"5ebba9d8-ca77-430e-ac67-672970284756","openFiles":["8f097062-10ad-4d1f-843a-6fac768c167c"],"currentFileId":"8f097062-10ad-4d1f-843a-6fac768c167c","resources":{"s3infooggi":{"name":"s3infooggi","type":"S3","config":{"mode":1,"bucket":{"region":"eu-central-1","name":"infooggi"}},"globallyEditable":false},"apigeuCentral1resizeresizeget":{"name":"apigeuCentral1resizeresizeget","type":"API_GATEWAY","config":{"selectedRegion":"eu-central-1","apiMode":0,"apiName":"resize","endpointType":"EDGE","resourceMode":0,"resourceName":"resize","resourcePath":"/resize","restMethod":"GET","proxyIntegration":false,"enableCORS":true,"stageMode":0,"stageName":"prod"},"globallyEditable":true},"apigeuCentral1resizeresizeany":{"name":"apigeuCentral1resizeresizeany","type":"API_GATEWAY","config":{"selectedRegion":"eu-central-1","apiMode":0,"apiName":"resize","endpointType":"EDGE","resourceMode":0,"resourceName":"resize","resourcePath":"/resize","restMethod":"ANY","proxyIntegration":false,"enableCORS":true,"stageMode":0,"stageName":"prod"},"globallyEditable":true},"apigeuCentral1resizerFunction1resizeany":{"name":"apigeuCentral1resizerFunction1resizeany","type":"API_GATEWAY","config":{"selectedRegion":"eu-central-1","apiMode":1,"apiName":"resizer-function1","apiId":"51edwmcv91","endpointType":"EDGE","rootResourceId":"soht5x0yp8","existingResources":{"/resize":"ctrkar","/":"soht5x0yp8"},"resourceMode":0,"resourceName":"resize","resourcePath":"/resize","restMethod":"ANY","proxyIntegration":false,"enableCORS":true,"stageMode":0,"stageName":"prod"},"globallyEditable":true}},"envVariables":[{"lambdaId":"all","varKey":"SIGMA_AWS_ACC_ID","varValue":null,"shouldPersist":false,"editable":false,"isEditable":false}],"packageJSON":{"dependencies":{"aws-sdk":{"name":"aws-sdk","version":"2.176.0","notRemovable":true}}},"lambdaId":"8f097062-10ad-4d1f-843a-6fac768c167c","additionalFiles":[]},"PROJECT_META":{"projectName":"ResizeImage","projectDescription":"Resize images on the fly","projectVersion":"1.0.0","projectRegion":"eu-central-1","repoName":"ResizeImage","repoUrl":"https://github.com/simonedoria/ResizeImage","lastSave":1531655938375}}